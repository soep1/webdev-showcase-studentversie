@model Contactform
@{
    ViewData["Title"] = "Contactpagina";
}

<div class="container">

    <h1>Jan van den Pol</h1>

    <p>Deze pagina kan gebruikt worden om mij een e-mail te sturen.</p>


    <section class="contact">

        <h1>Mail Versturen</h1>
        <p>@ViewBag.Message</p>
        <form method="post" class="form-contactpagina">
            
            <div class="form-contactpagina__inputelement fx-col">
                <label for="firstname">Voornaam: </label>
                <input type="text" asp-for="FirstName" name="firstname" id="firstname" required>
            </div>

            <div class="form-contactpagina__inputelement fx-col">
                <label for="lastname">Achternaam: </label>
                <input type="text" asp-for="LastName" name="lastname" id="lastname" required>
            </div>

            <div class="form-contactpagina__inputelement fx-col">
                <label for="email">E-mailadres: </label>
                <input type="email" asp-for="Email" name="email" id="email">
            </div>

            <div class="form-contactpagina__inputelement fx-col">
                <label for="phone">Telefoonnummer: </label>
                <input type="tel" asp-for="Phone" name="phone" id="phone">
            </div>
            
            <div class="form-contactpagina__inputelement fx-col">
                <label for="subject">Onderwerp: </label>
                <input type="text" asp-for="Subject" name="subject" id="subject">
            </div>
            
            <div class="form-contactpagina__inputelement fx-col">
                <label for="content">Inhoud: </label>
                <input type="text" asp-for="Content" name="content" id="content">
            </div>
            
            <div class="form-contactpagina__inputelement">
                <input type="submit" value="Verstuur!">
                <div class="spinner-border hide" role="status" id="spinner">
                    <span class="sr-only"></span>
                </div>
            </div>

        </form>

    </section>
    
</div>


<script>

        const inputEmail = document.getElementById('email');


        const validateEmail = () => {
            if (inputEmail.validity.typeMismatch) {
                inputEmail.setCustomValidity("Voer een geldig e-mailadres in!");
                inputEmail.reportValidity();
            } else if (inputEmail.value.length > 80) {
                inputEmail.setCustomValidity("Email moet niet langer dan 80 tekens zijn!");
            } else {
                inputEmail.setCustomValidity("");
            }
        }

        const validateForm = () => {
            validateEmail();
        }

        // Event listener voor email
        // Aanbevolen events voor formulieren: https://github.com/Windesheim-HBO-ICT/client_studenten/blob/main/lessen/week-2/les-1/form-constraint-validation-api/studentversie/events-voor-invoer-validatie.md
        inputEmail.addEventListener("blur", validateEmail);
        inputEmail.addEventListener("input", validateEmail);

        // Selecteer het formelement
        const form = document.querySelector('.form-contactpagina');

        // Event listener voor formulierinzending
        form.addEventListener('submit', function (event) {
            event.preventDefault(); // Voorkom standaard formulierinzending
            
            const spinner = document.getElementById("spinner");
            spinner.classList.remove("hide");

            // Valideer alle velden voor de zekerheid
            validateForm();

            // Verkrijg CSRF-token van het formulier
            const csrfToken = document.querySelector('input[name="__RequestVerificationToken"]').value;

            // Serialiseer formuliergegevens
            const formData = new URLSearchParams();

            formData.append('email', form.email.value);
            formData.append('Phone', form.phone.value);
            formData.append('FirstName', form.firstname.value);
            formData.append('LastName', form.lastname.value);
            formData.append('subject', form.subject.value);
            formData.append('content', form.content.value);

            formData.append('__RequestVerificationToken', csrfToken); // Voeg CSRF-token toe
            // Voer een POST-verzoek uit
            fetch('/Contact/Me/', {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/x-www-form-urlencoded' // Stel de inhoudstype in
                },
                body: formData // Stuur de geserialiseerde formuliergegevens als de body
            })
                .then(response => {
                    if (!response.ok) {
                        throw new Error('Netwerkrespons was niet ok');
                    }
                    return response.text();
                })
                .then(data => {
                    // Verwerk succesvolle formulierinzending
                    console.log('Formulier succesvol ingediend:', data);
                    // Optioneel: je kunt hier een redirect uitvoeren of een succesbericht tonen
                    location.reload()
                })
                .catch(error => {
                    console.error('Er was een probleem met de formulierinzending:', error);

                    alert(error.message)

                    // Verwerk fouten hier
                });
        });


    </script>